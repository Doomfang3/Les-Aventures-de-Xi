{"version":3,"sources":["data/book_1/chapter_1.js","components/Paragraph.jsx","components/MainText.jsx","App.js","serviceWorker.js","index.js"],"names":["data","Paragraph","state","react_default","a","createElement","className","this","props","text","Component","MainText","paragraphs","map","paragraph","components_Paragraph","App","Fragment","href","components_MainText","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNAmBeA,SAnBF,CAAC,CAAC,QAAS,cACtB,CAAC,iBAAkB,mPACnB,CAAC,GAAI,uPACL,CAAC,gBAAiB,oEAClB,CAAC,gBAAiB,iHAClB,CAAC,gBAAiB,6LAClB,CAAC,gBAAiB,+DAClB,CAAC,gBAAiB,8NAClB,CAAC,gBAAiB,kLAClB,CAAC,gBAAiB,gHAClB,CAAC,gBAAiB,yEAClB,CAAC,GAAI,oPACL,CAAC,cAAe,uPAChB,CAAC,gBAAiB,yHAClB,CAAC,GAAI,iEACL,CAAC,gBAAiB,iMAClB,CAAC,GAAI,2PCHQC,6MAVbC,MAAQ,2EAEN,OACEC,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,KAAKC,MAAMF,WACtBC,KAAKC,MAAMC,aALIC,aCgBTC,6MAbbT,MAAQ,2EAGN,IAAMU,EAAaZ,EAAKa,IAAI,SAAAC,GAAS,OAAIX,EAAAC,EAAAC,cAACU,EAAD,CAAWT,UAAWQ,EAAU,GAAIL,KAAMK,EAAU,OAE7F,OACEX,EAAAC,EAAAC,cAAA,eACGO,UARcF,aC0BRM,mLAxBX,OACEb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAa,SAAA,KACAd,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAUH,EAAAC,EAAAC,cAAA,KAAGa,KAAK,SAAR,SACzBf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAUH,EAAAC,EAAAC,cAAA,KAAGa,KAAK,UAAR,kBACzBf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAUH,EAAAC,EAAAC,cAAA,KAAGa,KAAK,OAAR,0BACzBf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAUH,EAAAC,EAAAC,cAAA,KAAGa,KAAK,aAAR,aACzBf,EAAAC,EAAAC,cAAA,cAIFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAACc,EAAD,MACAhB,EAAAC,EAAAC,cAAA,aAEFF,EAAAC,EAAAC,cAAA,uBApBYK,aCQEU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvB,EAAAC,EAAAC,cAACsB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4cfdc97d.chunk.js","sourcesContent":["const data = [[\"title\", \"Chapitre I\"],\r\n  [\"text-dialogue>\", \"Et c'est ainsi que le Démon mi-homme mi-renard à neuf queues fut repoussé au plus profond des grottes de Payon, scellé à tout jamais dans la Cité des Morts. Le village redevint un lieu paisible et la vie reprit son cours.\"],\r\n  [\"\", \"Assis dans l'herbe en demi-cercle autour de leur professeur, les enfants du petit village de Payon étaient suspendus à ses lèvres. C'était leur histoire préférée. Ils applaudirent et la réclamèrent une nouvelle fois.\"],\r\n  [\"text-dialogue\", \"C'est tout pour aujourd'hui. Il est temps de rentrer chez vous !\"],\r\n  [\"text-dialogue\", \"Monsieur, est-ce qu'il est toujours dans la grotte le démon ? demanda une petite fille rousse de cinq ans.\"],\r\n  [\"text-dialogue\", \"Oui ma petite Xi. Mais il est prisonnier. Les magiciens et les prêtres les plus puissants du royaume de Rune Midgard l'ont enfermé dans la Cité des Morts il y a bien longtemps.\"],\r\n  [\"text-dialogue\", \"Mais un jour il risque de ressortir alors ? insista-t-elle.\"],\r\n  [\"text-dialogue\", \"J'espère que non, mais si ça reproduit nous le mettrons de nouveau hors d'état de nuire. Les meilleurs chasseurs ne sont-ils pas formés ici, à Payon ? Tu voudrais devenir chasseur quand tu seras grande ?\"],\r\n  [\"text-dialogue\", \"Ah non, j'aime pas ça les arcs... Je préfèrerai avoir une grosse épée pour défendre les gens contre les méchants monstres ! affirma Xi d'un air solennel.\"],\r\n  [\"text-dialogue\", \"Nous verrons cela, dit l'homme en riant. Allez, rentre vite chez tes parents, ils vont se faire du soucis...\"],\r\n  [\"text-dialogue\", \"D'accord. A demain monsieur ! dit la fillette en quittant l'école.\"],\r\n  [\"\", \"Elle courut sans s'arrêter jusqu'à la maison de ses parents, de braves paysans qui l'avaient adoptée quand elle avait environ trois ans. Ils l’élevaient et la considéraient comme si elle était leur chair et leur sang.\"],\r\n  [\"text-sous-p\", \"Après avoir dîné, Xi monta se coucher dans sa petite chambre. Ses parents lui souhaitèrent bonne nuit, et elle s'endormit. Quelques heures plus tard, sa mère fit irruption dans sa chambre, alertée par des cris de détresse.\"],\r\n  [\"text-dialogue\", \"Tu as encore fait un mauvais rêve, Xi ? dit-elle en la serrant dans ses bras pour la rassurer. Là, calme toi...\"],\r\n  [\"\", \"Elle lui chantonna une berceuse, et la fillette se rendormit.\"],\r\n  [\"text-dialogue\", \"Toujours la même chose, dit-elle à son mari en se recouchant. J'ignore ce qu'elle a vécu avant que nous l'adoptions, mais je suis persuadée que ses cauchemars viennent de là.\"],\r\n  [\"\", \"Le lendemain matin, Xi ne se rappela de rien, comme à chaque fois. Sa mère lui fit deux nattes bien serrées avant de la laisser partir à l'école, la seule coiffure que la petite arrivait à peu près à garder jusqu'au soir.\"]\r\n];\r\n\r\nexport default data;","import React, { Component } from 'react';\r\n\r\nclass Paragraph extends Component {\r\n  state = {  }\r\n  render() {\r\n    return (\r\n      <p className={this.props.className}>\r\n        {this.props.text}\r\n      </p>\r\n     );\r\n  }\r\n}\r\n\r\nexport default Paragraph;","import React, { Component } from 'react';\r\nimport data from '../data/book_1/chapter_1';\r\nimport Paragraph from './Paragraph';\r\n\r\nclass MainText extends Component {\r\n  state = {\r\n   }\r\n  render() {\r\n    const paragraphs = data.map(paragraph => <Paragraph className={paragraph[0]} text={paragraph[1]} />);\r\n\r\n    return (\r\n      <section>\r\n        {paragraphs}\r\n      </section>\r\n     );\r\n  }\r\n}\r\n\r\nexport default MainText;","import React, { Component } from 'react';\nimport './App.css';\nimport MainText from './components/MainText';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n      <header>\n        <nav className=\"navContainer\">\n        <div></div>\n        <div className=\"navlink\"><a href=\"#home\">Home</a></div>\n        <div className=\"navlink\"><a href=\"#illus\">Illustrations</a></div>\n        <div className=\"navlink\"><a href=\"#dl\">Téléchargements</a></div>\n        <div className=\"navlink\"><a href=\"#contacts\">Contacts</a></div>\n        <div></div>\n        </nav>\n      </header>\n\n      <div className=\"container\">\n        <div></div>\n        <MainText />\n        <div></div>\n      </div>\n      <footer></footer>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}